# Alan Foley alan_foley@live.co.uk 09/06/22
# adapted code from Colin Clarke

# human genome here https://www.gencodegenes.org/human/

# generate human genome + hek plasmids
# extra plasmid from http://bioinformatics.psb.ugent.be/downloads/genomeview/hek293/supplementary/plasmid/

cat "/home/alan/nick/7/HEK/reference_genome/GRCh38.primary_assembly.genome.fa" "/home/alan/nick/7/HEK/reference_genome/hekextraplasmid.fasta" > reference_genome/hekandplasmid.fasta

# bowtie_build of reference index

bowtie2-build "/home/alan/nick/7/HEK/reference_genome/hekandplasmid.fasta" hekandplasmidbowtie2

# trimgalore

cat data/sample_info.txt | while read sample; do
trim_galore --paired data/raw/"$sample"_L001_R1_001.fastq.gz data/raw/"$sample"_L001_R2_001.fastq.gz -o data/preprocessed/paired
done


# wt genome mapping

for mode in unshifted shifted; do
  mkdir -p bwa_mapping/$mode
  cat data/sample_info.txt | while read sample; do
    # map
    bowtie2 -x hekandplasmidbowtie2 \
    -1 data/preprocessed/paired/"$sample"_L001_R1_001_val_1.fq.gz \
    -2 data/preprocessed/paired/"$sample"_L001_R2_001_val_2.fq.gz \
    > bwa_mapping/$mode/"$sample".sam;

    # sort
    java -jar  /home/alan/bin/picard.jar SortSam \
    INPUT=bwa_mapping/$mode/"$sample".sam \
    OUTPUT=bwa_mapping/$mode/"$sample".unfiltered.bam \
    SORT_ORDER=coordinate;

    # filter
    samtools view -bq 20 \
    bwa_mapping/$mode/"$sample".unfiltered.bam \
    > bwa_mapping/$mode/"$sample".bam

    # remove SAM
    rm bwa_mapping/$mode/"$sample".sam # remove the sam file
  done
done


# mark duplicates

for mode in unshifted shifted; do
  mkdir bwa_mapping/$mode/duplicate_marked bwa_mapping/$mode/added_read_group
  cat data/sample_info.txt | while read sample; do
    # Mark duplicates for checking how many are duplicates
    java -jar  /home/alan/bin/picard.jar MarkDuplicates \
    INPUT=bwa_mapping/$mode/"$sample".bam \
    OUTPUT=bwa_mapping/$mode/duplicate_marked/"$sample".DUPTEST.bam \
    METRICS_FILE=/dev/null

    # Mark duplicates with removed duplicate reads
    java -jar  /home/alan/bin/picard.jar MarkDuplicates \
    INPUT=bwa_mapping/$mode/"$sample".bam \
    OUTPUT=bwa_mapping/$mode/duplicate_marked/"$sample".bam \
    REMOVE_DUPLICATES=TRUE \
    METRICS_FILE=/dev/null

    # Add read groups
    java -jar  /home/alan/bin/picard.jar AddOrReplaceReadGroups \
    I=bwa_mapping/$mode/duplicate_marked/"$sample".bam \
    O=bwa_mapping/$mode/added_read_group/"$sample".bam \
    RGSM="$sample" \
    RGLB=mtdna_seq \
    RGPL=illumina \
    RGPU=none \
    VALIDATION_STRINGENCY=LENIENT;
  done
done



# mapping statistics

mkdir -p plotting_data/mapping_statistics/mapping_rates
mkdir  -p plotting_data/mapping_statistics/coverage/perbase_coverage/unshifted
mkdir  -p plotting_data/mapping_statistics/coverage/perbase_coverage/shifted


cat data/sample_info.txt | while read sample; do
  samtools depth bwa_mapping/unshifted/added_read_group/$sample.bam | \
  awk '{sum+=$3} END { print "'$sample'",sum/NR}' >> plotting_data/mapping_statistics/coverage/sample_depth

  samtools depth bwa_mapping/unshifted/added_read_group/$sample.bam > \
  plotting_data/mapping_statistics/coverage/perbase_coverage/unshifted/$sample.perbase.coverage

  samtools depth bwa_mapping/shifted/added_read_group/$sample.bam > \
  plotting_data/mapping_statistics/coverage/perbase_coverage/shifted/$sample.perbase.coverage

  bamtools stats -in bwa_mapping/shifted/added_read_group/$sample.bam > \
  plotting_data/mapping_statistics/mapping_rates/$sample.map.rates

  total_reads=$(bamtools stats -in bwa_mapping/unshifted/"$sample".unfiltered.bam  | grep 'Total reads' | awk '{print $3}')

  mapped_reads=$(bamtools stats -in bwa_mapping/unshifted/duplicate_marked/"$sample".DUPTEST.bam | grep 'Mapped reads' | awk '{print $3}')

  duplicates=$(bamtools stats -in bwa_mapping/unshifted/duplicate_marked/"$sample".DUPTEST.bam  | grep 'Duplicates' | awk '{print $2}')

  echo -e $sample'\t'$total_reads'\t'$mapped_reads'\t'$duplicates >> plotting_data/mapping_statistics/mapping_rates.txt
done



######################################




# R
# alan foley alan_foley@live.co.uk


install.packages("highr")
install.packages("knitr")
install.packages("stringr")
install.packages("selectr")
install.packages("assertthat")
install.packages("dbplyr")
install.packages("cellranger")
install.packages("googlesheets4")
install.packages("rmarkdown")
install.packages("rvest")
install.packages("reprex")
install.packages("readx1")
install.packages("RColorBrewer")
install.packages("scales")
install.packages("xlsx")
install.packages("colorRamps")
install.packages("tidyverse")

library(forcats)
library(tidyr)
library(dplyr)
library(RColorBrewer)
library("tidyverse")
library(scales)
library(xlsx)
library(colorRamps)
library(ggplot2)
library(stringr)

theme_ms <- function(base_size = 10, base_family = "Helvetica") {
  library(grid)
  (theme_bw(base_size = base_size, base_family = base_family) +
      theme(
        text = element_text(color = "black"),
        axis.title = element_text(face = "bold", size = rel(1)),
        plot.title = element_text(face = "bold", size = rel(1)),
        axis.text = element_text(size = rel(1), color = "black"),
        legend.title = element_text(face = "bold"),
        legend.text = element_text(face = "bold"),
        legend.background = element_rect(fill = "transparent"),
        legend.key.size = unit(0.8, "lines"),
        panel.border = element_rect(color = "black", size = 1),
        panel.grid = element_blank()
      ))
}

# create a directory for saving figures
figsdir <- "./figures/"
if (!dir.exists(figsdir)) {
  dir.create(figsdir)
}

tabsdir <- "./tables/"
if (!dir.exists(tabsdir)) {
  dir.create(tabsdir)
}

# function to save figures
saveManuscriptPlot <- function(p, width, height) {
  figfile <- file.path(figsdir, sprintf(
    "%s.png",
    gsub("\\.", "_", deparse(substitute(p)))
  ))
  ggsave(figfile, plot = p, width = width, height = height, units = "in", device = "png")
  
  fill.gradient <- scale_fill_gradientn(
    colors = matlab.like(200),
    trans = "log10"
  )
}
```
# Sequencing
## Read Mapping

mapping_data_unshifted <- read.table(file = "plotting_data/mapping_statistics/mapping_rates.txt")

mapping_data_unshifted <- mapping_data_unshifted %>%
  mutate(
    sample_name = V1,
    Unmapped = V2 - V3,
    Duplicates = V4,
    Unique = V3 - V4
  ) %>%
  select(sample_name, Unmapped, Duplicates, Unique)

write.xlsx(x = mapping_data_unshifted, 
           sheetName = "Read Mapping", 
           file = "tables/Supplementary Data.xlsx",
           append = F )

mapping_data_unshifted <- mapping_data_unshifted %>%
  pivot_longer(
    cols = c("Unmapped", "Duplicates", "Unique"),
    names_to = "Variable",
    values_to = "Reads"
  )

mapping_data_unshifted$Variable <- fct_relevel(factor(mapping_data_unshifted$Variable), c("Unmapped", "Duplicates", "Unique"))

scientific <- function(x) {
  ifelse(x == 0, "0", parse(text = gsub("[+]", "", gsub("e", " %*% 10^", scientific_format()(x)))))
}

sample_order <- c("NGS1","NGS2","NGS3","NGS4","NGS5","NGS6","NGS7","NGS8")

Fig1_read_mapping <- mapping_data_unshifted %>%
  mutate(sample_name = case_when(
    sample_name == "NGS1_S1" ~ "NGS1",
    sample_name == "NGS2_S7" ~ "NGS2",
    sample_name == "NGS3_S2" ~ "NGS3",
    sample_name == "NGS4_S8" ~ "NGS4",
    sample_name == "NGS5_S3" ~ "NGS5",
    sample_name == "NGS6_S4" ~ "NGS6",
    sample_name == "NGS7_S5" ~ "NGS7",
    sample_name == "NGS8_S6" ~ "NGS8"
  )) %>%
  ggplot(aes(x = sample_name, y = Reads, fill = Variable)) +
  geom_bar(position = "stack", stat = "identity") +
  theme_ms() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
  labs(fill = "", y = "# Reads", x = "", title = "Read mapping of 1-8 with HEK") +
  theme(legend.position = "right") +
  scale_y_continuous(
    expand = c(0, 10000),
    labels = scientific
  ) +
  scale_fill_brewer(palette = "Set1")


saveManuscriptPlot(Fig1_read_mapping, 10, 5)
Fig1_read_mapping
```




## Average sample coverage

```{r}
average_cell_line_coverage <- read.table("plotting_data/mapping_statistics/coverage/sample_depth", header = F)

average_cell_line_coverage <- average_cell_line_coverage %>%
  mutate(
    sample_name = as.factor(V1),
    average_coverage = V2
  ) %>%
  mutate(sample_name = case_when(
    sample_name == "NGS1_S1" ~ "NGS1",
    sample_name == "NGS2_S7" ~ "NGS2",
    sample_name == "NGS3_S2" ~ "NGS3",
    sample_name == "NGS4_S8" ~ "NGS4",
    sample_name == "NGS5_S3" ~ "NGS5",
    sample_name == "NGS6_S4" ~ "NGS6",
    sample_name == "NGS7_S5" ~ "NGS7",
    sample_name == "NGS8_S6" ~ "NGS8"
  )) %>%
  select(sample_name, average_coverage)

write.xlsx(x = average_cell_line_coverage, 
           sheetName = "Average Sample Coverage", 
           file = "tables/Supplementary Data.xlsx",
           append = T )

average_cell_line_coverage$sample_name <- factor(average_cell_line_coverage$sample_name, 
                                             levels = sample_order)

Fig2_average_sample_coverage <- average_cell_line_coverage %>%
  ggplot(aes(x = sample_name, y = average_coverage)) +
  geom_bar(stat = "identity", fill = "#377EB8") +
  labs(x = "", y = "Depth of Coverage", title = "Average sequencing depth for each sample") +
  theme_ms() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1))

saveManuscriptPlot(Fig2_average_sample_coverage, 10, 5)
Fig2_average_sample_coverage
```






## Perbase coverage


```{r}
perbase_cell_files_unshifted2 <- list.files("plotting_data/mapping_statistics/coverage/perbase_coverage/unshifted/", full.names = T)

perbase_cell_files_shifted2 <- list.files("plotting_data/mapping_statistics/coverage/perbase_coverage/shifted/", full.names = T)

perbase_unshifted2 <- do.call("rbind", lapply(perbase_cell_files_unshifted2, function(fn) {
  data.frame(Filename = fn, read.table(fn))
})) %>%
  select(Filename, V1, V2, V3) %>%
  mutate(
    region = V1,
    perbase = V3,
    position = V2
  ) %>%
  mutate(Filename = str_remove(Filename, "plotting_data/mapping_statistics/coverage/perbase_coverage/unshifted/")) %>%
  mutate(Filename = str_remove(Filename, ".perbase.coverage")) %>%
  mutate(sample_name = case_when(
    Filename == "/NGS1_S1" ~ "NGS1",
    Filename == "/NGS2_S7" ~ "NGS2",
    Filename == "/NGS3_S2" ~ "NGS3",
    Filename == "/NGS4_S8" ~ "NGS4",
    Filename == "/NGS5_S3" ~ "NGS5",
    Filename == "/NGS6_S4" ~ "NGS6",
    Filename == "/NGS7_S5" ~ "NGS7",
    Filename == "/NGS8_S6" ~ "NGS8"
  )) %>%
  select(sample_name, region, position, perbase)

sample_order <- c("NGS1","NGS2","NGS3","NGS4","NGS5","NGS6","NGS7","NGS8")


perbase_shifted2 <- do.call("rbind", lapply(perbase_cell_files_shifted2, function(fn) {
  data.frame(Filename = fn, read.table(fn))
})) %>%
  select(Filename, V1, V2, V3) %>%
  mutate(
    region = V1,
    perbase = V3,
    position = V2
  ) %>%
  mutate(Filename = str_remove(Filename, "plotting_data/mapping_statistics/coverage/perbase_coverage/shifted/")) %>%
  mutate(Filename = str_remove(Filename, ".perbase.coverage")) %>%
  mutate(sample_name = case_when(
    Filename == "/NGS1_S1" ~ "NGS1",
    Filename == "/NGS2_S7" ~ "NGS2",
    Filename == "/NGS3_S2" ~ "NGS3",
    Filename == "/NGS4_S8" ~ "NGS4",
    Filename == "/NGS5_S3" ~ "NGS5",
    Filename == "/NGS6_S4" ~ "NGS6",
    Filename == "/NGS7_S5" ~ "NGS7",
    Filename == "/NGS8_S6" ~ "NGS8"
  )) %>%
  select(sample_name, region, position, perbase)

perbase_shifted2$sample_name <- factor(perbase_shifted2$sample_name, 
                                             levels = sample_order)


Fig7_unshifted_pcDNA3 <- perbase_unshifted2 %>%
  filter(region %in% c("pcDNA3.1Zeo-hST-endoT-myc")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted pcDNA3") +
  theme_ms()
Fig7_unshifted_pcDNA3

Fig8_unshifted_pcDNA6_TR <- perbase_unshifted2 %>%
  filter(region %in% c("pcDNA6_TR")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted pcDNA6_TR") +
  theme_ms()
Fig8_unshifted_pcDNA6_TR

Fig9_unshifted_adenovirus <- perbase_unshifted2 %>%
  filter(region %in% c("adenovirus")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted adenovirus") +
  theme_ms()
Fig9_unshifted_adenovirus

Fig10_unshifted_pFRT_lacZeo <- perbase_unshifted2 %>%
  filter(region %in% c("pFRT_lacZeo")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted pFRT_lacZeo") +
  theme_ms()
Fig10_unshifted_pFRT_lacZeo

saveManuscriptPlot(Fig7_unshifted_pcDNA3, 10, 10)
saveManuscriptPlot(Fig8_unshifted_pcDNA6_TR, 10, 10)
saveManuscriptPlot(Fig9_unshifted_adenovirus, 10, 10)
saveManuscriptPlot(Fig10_unshifted_pFRT_lacZeo, 10, 10)


Fig11_chr1 <- perbase_unshifted2 %>%
  filter(region %in% c("chr1")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted chr1") +
  theme_ms()
Fig11_chr1
saveManuscriptPlot(Fig11_chr1, 10, 10)

Fig12_chr2 <- perbase_unshifted2 %>%
  filter(region %in% c("chr2")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted chr2") +
  theme_ms()
Fig12_chr2
saveManuscriptPlot(Fig12_chr2, 10, 10)

Fig13_chr3 <- perbase_unshifted2 %>%
  filter(region %in% c("chr3")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted chr3") +
  theme_ms()
Fig13_chr3
saveManuscriptPlot(Fig13_chr3, 10, 10)

Fig14_chr4 <- perbase_unshifted2 %>%
  filter(region %in% c("chr4")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted chr4") +
  theme_ms()
Fig14_chr4
saveManuscriptPlot(Fig14_chr4, 10, 10)

Fig15_chr5 <- perbase_unshifted2 %>%
  filter(region %in% c("chr5")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted chr5") +
  theme_ms()
Fig15_chr5
saveManuscriptPlot(Fig15_chr5, 10, 10)

Fig16_chr6 <- perbase_unshifted2 %>%
  filter(region %in% c("chr6")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted chr6") +
  theme_ms()
Fig16_chr6
saveManuscriptPlot(Fig16_chr6, 10, 10)


Fig17_chr7 <- perbase_unshifted2 %>%
  filter(region %in% c("chr7")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted chr7") +
  theme_ms()
Fig17_chr7
saveManuscriptPlot(Fig17_chr7, 10, 10)

Fig18_chr8 <- perbase_unshifted2 %>%
  filter(region %in% c("chr8")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted chr8") +
  theme_ms()
Fig18_chr8
saveManuscriptPlot(Fig18_chr8, 10, 10)

Fig19_chr9 <- perbase_unshifted2 %>%
  filter(region %in% c("chr9")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted chr9") +
  theme_ms()
Fig19_chr9
saveManuscriptPlot(Fig19_chr9, 10, 10)

Fig20_chr10 <- perbase_unshifted2 %>%
  filter(region %in% c("chr10")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted chr10") +
  theme_ms()
Fig20_chr10
saveManuscriptPlot(Fig20_chr10, 10, 10)

Fig21_chr11 <- perbase_unshifted2 %>%
  filter(region %in% c("chr11")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted chr11") +
  theme_ms()
Fig21_chr11
saveManuscriptPlot(Fig21_chr11, 10, 10)

Fig22_chr12 <- perbase_unshifted2 %>%
  filter(region %in% c("chr12")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted chr12") +
  theme_ms()
Fig22_chr12
saveManuscriptPlot(Fig22_chr12, 10, 10)

Fig23_chr13 <- perbase_unshifted2 %>%
  filter(region %in% c("chr13")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted chr13") +
  theme_ms()
Fig23_chr13
saveManuscriptPlot(Fig23_chr13, 10, 10)

Fig24_chr14 <- perbase_unshifted2 %>%
  filter(region %in% c("chr14")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted chr14") +
  theme_ms()
Fig24_chr14
saveManuscriptPlot(Fig24_chr14, 10, 10)

Fig25_chr15 <- perbase_unshifted2 %>%
  filter(region %in% c("chr15")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted chr15") +
  theme_ms()
Fig25_chr15
saveManuscriptPlot(Fig25_chr15, 10, 10)

Fig26_chr16 <- perbase_unshifted2 %>%
  filter(region %in% c("chr16")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted chr16") +
  theme_ms()
Fig26_chr16
saveManuscriptPlot(Fig26_chr16, 10, 10)

Fig27_chr17 <- perbase_unshifted2 %>%
  filter(region %in% c("chr17")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted chr17") +
  theme_ms()
Fig27_chr17
saveManuscriptPlot(Fig27_chr17, 10, 10)

Fig28_chr18 <- perbase_unshifted2 %>%
  filter(region %in% c("chr18")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted chr18") +
  theme_ms()
Fig28_chr18
saveManuscriptPlot(Fig28_chr18, 10, 10)

Fig29_chr19 <- perbase_unshifted2 %>%
  filter(region %in% c("chr19")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted chr19") +
  theme_ms()
Fig29_chr19
saveManuscriptPlot(Fig29_chr19, 10, 10)

Fig30_chr20 <- perbase_unshifted2 %>%
  filter(region %in% c("chr20")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted chr20") +
  theme_ms()
Fig30_chr20
saveManuscriptPlot(Fig30_chr20, 10, 10)

Fig31_chr21 <- perbase_unshifted2 %>%
  filter(region %in% c("chr21")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted chr21") +
  theme_ms()
Fig31_chr21
saveManuscriptPlot(Fig31_chr21, 10, 10)

Fig32_chr22 <- perbase_unshifted2 %>%
  filter(region %in% c("chr22")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted chr22") +
  theme_ms()
Fig32_chr22
saveManuscriptPlot(Fig32_chr22, 10, 10)

Fig32_chr22 <- perbase_unshifted2 %>%
  filter(region %in% c("chr22")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted chr22") +
  theme_ms()
Fig32_chr22
saveManuscriptPlot(Fig32_chr22, 10, 10)

Fig33_chrX <- perbase_unshifted2 %>%
  filter(region %in% c("chrX")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted chrX") +
  theme_ms()
Fig33_chrX
saveManuscriptPlot(Fig33_chrX, 10, 10)

Fig34_chrY <- perbase_unshifted2 %>%
  filter(region %in% c("chrY")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted chrY") +
  theme_ms()
Fig34_chrY
saveManuscriptPlot(Fig34_chrY, 10, 10)



# extra closeup graphs

Fig35_chr11_subsetted <- perbase_unshifted2 %>%
  filter(region %in% c("chr11")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted chr11 with subset region 5224933-5226604") +
  xlim(5224933,5226604) +
  theme_ms()
Fig35_chr11_subsetted
saveManuscriptPlot(Fig35_chr11_subsetted, 10, 10)

Fig36_KI270442.1 <- perbase_unshifted2 %>%
  filter(region %in% c("KI270442.1")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted KI270442.1") +
  theme_ms()
Fig36_KI270442.1
saveManuscriptPlot(Fig36_KI270442.1, 10, 10)

Fig37_KI270448.1 <- perbase_unshifted2 %>%
  filter(region %in% c("KI270448.1")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted KI270448.1") +
  theme_ms()
Fig37_KI270448.1
saveManuscriptPlot(Fig37_KI270448.1, 10, 10)

Fig38_KI270712.1 <- perbase_unshifted2 %>%
  filter(region %in% c("KI270712.1")) %>%
  ggplot(aes(x = position, y = perbase)) +
  geom_line(color = "#377EB8") +
  facet_wrap(~sample_name, ncol = 2) +
  labs(y = "Depth of Coverage", x = "position (bp)", title = "Perbase coverage for NGS 1-8 against unshifted KI270712.1") +
  theme_ms()
Fig38_KI270712.1
saveManuscriptPlot(Fig38_KI270712.1, 10, 10)

